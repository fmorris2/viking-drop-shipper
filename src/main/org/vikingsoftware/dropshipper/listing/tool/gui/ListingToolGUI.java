/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main.org.vikingsoftware.dropshipper.listing.tool.gui;

import java.awt.Font;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import javax.swing.JLabel;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingUtilities;

import main.org.vikingsoftware.dropshipper.listing.tool.logic.Listing;
import main.org.vikingsoftware.dropshipper.listing.tool.logic.ListingQueue;

/**
 *
 * @author Bren
 */
public class ListingToolGUI extends javax.swing.JFrame {

	private static final long serialVersionUID = 7954579463528571026L;

	private static ListingToolGUI instance;
	private static ListingToolController controller;

	private final ExecutorService executor = Executors.newSingleThreadExecutor();

	public double originalListingPrice;

	/**
     * Creates new form GUI
     */
    private ListingToolGUI() {
        initComponents();
    }

    public static synchronized ListingToolGUI get() {
    	if(instance == null) {
    		instance = new ListingToolGUI();
    		controller = new ListingToolController();
    		controller.addListeners();
    	}

    	return instance;
    }

    public void updateListingPriceWithMargin() {
    	final double priceWithMargin = originalListingPrice * (1.00 + ((double)targetMarginSpinner.getValue() / 100));
    	priceSpinner.setValue(priceWithMargin);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagesScrollPane = new javax.swing.JScrollPane();
        imagesPanel = new javax.swing.JPanel();
        fulfillmentUrlInput = new javax.swing.JTextField();
        fullfillmentFileBtn = new javax.swing.JButton();
        variationsHeaderText = new javax.swing.JLabel();
        variationsScrollPane = new javax.swing.JScrollPane();
        variationsTable = new javax.swing.JTable();
        imagesHeaderText = new javax.swing.JLabel();
        generalInformationHeaderText1 = new javax.swing.JLabel();
        listingTitleInput = new javax.swing.JTextField();
        listingTitleHeaderText = new javax.swing.JLabel();
        priceHeaderText = new javax.swing.JLabel();
        priceSpinner = new JSpinner();
        targetMarginSpinner = new JSpinner();
        targetMarginSpinner.addChangeListener(e -> updateListingPriceWithMargin());
        targetMarginText = new JLabel();
        descriptionTitleHeaderText = new javax.swing.JLabel();
        renderedDescScrollPane = new javax.swing.JScrollPane();
        renderedDescPane = new javax.swing.JEditorPane();
        renderedDescPane.setEditable(false);
        rawDescScrollPane = new javax.swing.JScrollPane();
        rawDescInput = new javax.swing.JTextArea();
        rawDescInput.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyTyped(KeyEvent e) {
        		executor.submit(() -> {
        			try {
						Thread.sleep(200);
					} catch (final InterruptedException e1) {
						e1.printStackTrace();
					}
        			SwingUtilities.invokeLater(() -> renderedDescPane.setText(rawDescInput.getText()));
        		});
        	}
        });
        addFullfillmentHeaderText = new javax.swing.JLabel();
        fullfillmentsTitleHeaderText = new javax.swing.JLabel();
        queueSizeValue = new javax.swing.JLabel();
        queueSizeLabelText = new javax.swing.JLabel();
        skipListingBtn = new javax.swing.JButton();
        publishListingBtn = new javax.swing.JButton();
        statusText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1225, 825));
        getContentPane().setLayout(null);

        imagesScrollPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 2));

        final javax.swing.GroupLayout imagesPanelLayout = new javax.swing.GroupLayout(imagesPanel);
        imagesPanel.setLayout(imagesPanelLayout);
        imagesPanelLayout.setHorizontalGroup(
            imagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 418, Short.MAX_VALUE)
        );
        imagesPanelLayout.setVerticalGroup(
            imagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 566, Short.MAX_VALUE)
        );

        imagesScrollPane.setViewportView(imagesPanel);

        getContentPane().add(imagesScrollPane);
        imagesScrollPane.setBounds(10, 210, 382, 570);

        fulfillmentUrlInput.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        fulfillmentUrlInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 2));
        fulfillmentUrlInput.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                fulfillmentUrlInputActionPerformed(evt);
            }
        });
        getContentPane().add(fulfillmentUrlInput);
        fulfillmentUrlInput.setBounds(10, 62, 310, 30);

        fullfillmentFileBtn.setBackground(new java.awt.Color(51, 51, 51));
        fullfillmentFileBtn.setText("file");
        fullfillmentFileBtn.setBorder(null);
        fullfillmentFileBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        fullfillmentFileBtn.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                fullfillmentFileBtnActionPerformed(evt);
            }
        });
        getContentPane().add(fullfillmentFileBtn);
        fullfillmentFileBtn.setBounds(322, 62, 50, 30);

        variationsHeaderText.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        variationsHeaderText.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        variationsHeaderText.setText("Variations");
        variationsHeaderText.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        getContentPane().add(variationsHeaderText);
        variationsHeaderText.setBounds(820, 10, 110, 24);
        variationsHeaderText.setVisible(false);

        variationsScrollPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 2));

        variationsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Price", "Color", "Length"
            }
        ));
        variationsScrollPane.setViewportView(variationsTable);

        getContentPane().add(variationsScrollPane);
        variationsScrollPane.setBounds(820, 40, 370, 160);
        variationsScrollPane.setVisible(false);

        imagesHeaderText.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        imagesHeaderText.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        imagesHeaderText.setText("Images");
        imagesHeaderText.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        getContentPane().add(imagesHeaderText);
        imagesHeaderText.setBounds(10, 180, 70, 24);

        generalInformationHeaderText1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        generalInformationHeaderText1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        generalInformationHeaderText1.setText("General information");
        generalInformationHeaderText1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        getContentPane().add(generalInformationHeaderText1);
        generalInformationHeaderText1.setBounds(390, 10, 170, 24);

        listingTitleInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 2));
        getContentPane().add(listingTitleInput);
        listingTitleInput.setBounds(390, 62, 420, 40);

        listingTitleHeaderText.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        listingTitleHeaderText.setText("TITLE");
        getContentPane().add(listingTitleHeaderText);
        listingTitleHeaderText.setBounds(390, 45, 34, 14);

        priceHeaderText.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        priceHeaderText.setText("PRICE");
        getContentPane().add(priceHeaderText);
        priceHeaderText.setBounds(390, 122, 70, 14);

        priceSpinner.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        priceSpinner.setModel(new SpinnerNumberModel(0.00, 0.00, Double.MAX_VALUE, 1D));
        priceSpinner.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 2));
        getContentPane().add(priceSpinner);
        priceSpinner.setBounds(390, 140, 420, 30);

        targetMarginText.setFont(new Font("SansSerif", 1, 11));
        targetMarginText.setText("TARGET MARGIN (%)");
        getContentPane().add(targetMarginText);
        targetMarginText.setBounds(820, 122, 150, 14);

        targetMarginSpinner.setFont(new Font("SansSerif", 0, 14));
        targetMarginSpinner.setModel(new SpinnerNumberModel(25.00, 14.00, Double.MAX_VALUE, 1D));
        targetMarginSpinner.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 2));
        getContentPane().add(targetMarginSpinner);
        targetMarginSpinner.setBounds(820, 140, 350, 30);

        descriptionTitleHeaderText.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        descriptionTitleHeaderText.setText("DESCRIPTION");
        getContentPane().add(descriptionTitleHeaderText);
        descriptionTitleHeaderText.setBounds(390, 190, 80, 14);

        renderedDescScrollPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 2));

        renderedDescPane.setBorder(null);
        renderedDescPane.setContentType("text/html"); // NOI18N
        renderedDescPane.setText("<p>Lorem ipsum dolor sit amet.</p>");
        renderedDescScrollPane.setViewportView(renderedDescPane);

        getContentPane().add(renderedDescScrollPane);
        renderedDescScrollPane.setBounds(390, 390, 810, 390);

        rawDescScrollPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 2));

        rawDescInput.setColumns(20);
        rawDescInput.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        rawDescInput.setRows(5);
        rawDescInput.setText("<p>Lorem ipsum dolor sit amet.</p>");
        rawDescScrollPane.setViewportView(rawDescInput);

        getContentPane().add(rawDescScrollPane);
        rawDescScrollPane.setBounds(390, 210, 810, 182);

        addFullfillmentHeaderText.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        addFullfillmentHeaderText.setText("ADD FULLFILLMENT URL TO QUEUE");
        getContentPane().add(addFullfillmentHeaderText);
        addFullfillmentHeaderText.setBounds(10, 45, 200, 14);

        fullfillmentsTitleHeaderText.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        fullfillmentsTitleHeaderText.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        fullfillmentsTitleHeaderText.setText("Fullfillments");
        fullfillmentsTitleHeaderText.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        getContentPane().add(fullfillmentsTitleHeaderText);
        fullfillmentsTitleHeaderText.setBounds(10, 10, 170, 24);

        queueSizeValue.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        queueSizeValue.setForeground(new java.awt.Color(0, 0, 255));
        queueSizeValue.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        queueSizeValue.setText("0");
        getContentPane().add(queueSizeValue);
        queueSizeValue.setBounds(342, 45, 30, 14);

        queueSizeLabelText.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        queueSizeLabelText.setText("Queue size:");
        getContentPane().add(queueSizeLabelText);
        queueSizeLabelText.setBounds(278, 45, 70, 14);

        skipListingBtn.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        skipListingBtn.setForeground(new java.awt.Color(255, 0, 0));
        skipListingBtn.setText("Skip Listing");
        skipListingBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        skipListingBtn.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                skipListingBtnActionPerformed(evt);
            }
        });
        getContentPane().add(skipListingBtn);
        skipListingBtn.setBounds(165, 143, 70, 34);

        publishListingBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        publishListingBtn.setForeground(new java.awt.Color(0, 153, 0));
        publishListingBtn.setText("Publish Listing");
        publishListingBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0)));
        publishListingBtn.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                publishListingBtnActionPerformed(evt);
            }
        });
        getContentPane().add(publishListingBtn);
        publishListingBtn.setBounds(240, 140, 135, 40);

        statusText.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        statusText.setText("Ready");
        statusText.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(statusText);
        statusText.setBounds(10, 95, 360, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fullfillmentFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullfillmentFileBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fullfillmentFileBtnActionPerformed

    private void fulfillmentUrlInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fulfillmentUrlInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fulfillmentUrlInputActionPerformed

    private void skipListingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skipListingBtnActionPerformed
    	System.out.println("Skip Listing!");
    	ListingQueue.poll();
        controller.displayNextListing();
    }

    private void publishListingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publishListingBtnActionPerformed
    	System.out.println("Publish listing!");
    	final Listing listing = ListingQueue.poll();
    	controller.displayNextListing();
    }

    public static ListingToolController getController() {
    	return controller;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel addFullfillmentHeaderText;
    public javax.swing.JSpinner priceSpinner;
    public javax.swing.JLabel priceHeaderText;
    public JSpinner targetMarginSpinner;
    public JLabel targetMarginText;
    public javax.swing.JLabel descriptionTitleHeaderText;
    public javax.swing.JTextField fulfillmentUrlInput;
    public javax.swing.JButton fullfillmentFileBtn;
    public javax.swing.JLabel fullfillmentsTitleHeaderText;
    public javax.swing.JLabel generalInformationHeaderText1;
    public javax.swing.JLabel imagesHeaderText;
    public javax.swing.JPanel imagesPanel;
    public javax.swing.JScrollPane imagesScrollPane;
    public javax.swing.JLabel listingTitleHeaderText;
    public javax.swing.JTextField listingTitleInput;
    public javax.swing.JButton publishListingBtn;
    public javax.swing.JLabel queueSizeLabelText;
    public javax.swing.JLabel queueSizeValue;
    public javax.swing.JTextArea rawDescInput;
    public javax.swing.JScrollPane rawDescScrollPane;
    public javax.swing.JEditorPane renderedDescPane;
    public javax.swing.JScrollPane renderedDescScrollPane;
    public javax.swing.JButton skipListingBtn;
    public javax.swing.JLabel statusText;
    public javax.swing.JLabel variationsHeaderText;
    public javax.swing.JScrollPane variationsScrollPane;
    public javax.swing.JTable variationsTable;
    // End of variables declaration//GEN-END:variables
}
